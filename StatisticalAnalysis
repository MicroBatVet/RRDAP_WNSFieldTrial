####RRDAP WNS Treatment Field Trial Survival Analysis####

#Install required packages if necessary
install.packages(c("survival","survminer","readxl"))

#Load required packages
library(survival)
library(survminer)
library(readxl)

#Load data
WNS_RRDAP_TxTrial <- read_excel("WNS_RRDAP_TxTrial.xlsx", col_types = c("numeric", "numeric", "text",
                                                                        "text", "text", "numeric", "numeric", 
                                                                        "numeric", "text", "numeric", "text", "numeric"))



View(WNS_RRDAP_TxTrial)
head(WNS_RRDAP_TxTrial)

#Convert tible to dataframe
KY <- as.data.frame(WNS_RRDAP_TxTrial)

#T-test conducted within Excel in field to confirm that Mass_start and WingScore_start 
#These were not signifcantly different before trial start.  So code not here for this analysis.

#Check for normality
shapiro.test(KY$Mass) #Failed normality
hist(KY$Mass)  #Can see negatively skewed data
#Because of weights not recorded for deceased animals, this variable was eliminated from analysis.

#Check for tetrachoric correlation between variables
data = KY[,c("Sex", "Location")]
table(data)
sex_location = matrix(c(5,113,66,163), nrow=2)
tetrachoric(sex_location)
######Correlation of -0.6

data = KY[,c("Sex", "TxControl")]
table(data)
sex_TxControl = matrix(c(41,132,30,144), nrow=2)
tetrachoric(sex_TxControl)
######Correlation of 0.14

data = KY[,c("Location", "TxControl")]
table(data)
Location_TxControl = matrix(c(59,114,59,115), nrow=2)
tetrachoric(Location_TxControl)
######Correlation of 0.003


#Assessing overall surival example code only looking at treatment
fit.cox1 <- coxph(Surv(Time1, Time2, Event) ~ TxControl, id=Band, model=TRUE, data=KY) #id b/c repeated lines for each indvidial
fit.cox1a <-coxph(Surv(Time1, Time2, Event) ~ TxControl, model=TRUE, data=KY)  #The data cannot be plotted with ggforest() unless id argement is not included, therefore this code is here so the readers can see the results are identical.
summary(fit.cox1)
summary(fit.cox1a)  #Note that id is not needed as all outputs identical, but ggforest() does not plot with id argument present.
cox.zph(fit.cox1)  #verify proportial hazards met

#Code for models of interest, cannot have Sex and Location together due to binary correlation
fit.cox2 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Location + TxControl*Location, id=Band, data=KY)
summary(fit.cox2)
cox.zph(fit.cox2)  #Location fails proportional assumptions

fit.cox3 <-coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex + TxControl*Sex, id=Band, model=TRUE, data=KY)
summary(fit.cox3)
cox.zph(fit.cox3) 

fit.cox4 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex, model=TRUE, data=KY)
cox.zph(fit.cox4)
summary(fit.cox4)
ggforest(fit.cox4)  #plot cox model

#Code for models of interest based upon a single site instead of overall.
#First group data by site
KYBreckenridge <- subset(KY, Location == "Breckenridge")
head(KYBreckenridge)
KYRockcastle <-subset(KY, Location == "Rockcastle")
head(KYRockcastle)

#Breckenridge analysis
fit.coxB1 <- coxph(Surv(Time1, Time2, Event) ~ TxControl, model=TRUE, data=KYBreckenridge) 
summary(fit.coxB1)
cox.zph(fit.coxB1)  #verify proportial hazards met

#Breckenridge analysis
fit.coxB2 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex + Sex*TxControl, model=TRUE, data=KYBreckenridge) 
summary(fit.coxB2)
cox.zph(fit.coxB2)  #verify proportial hazards met, interaction failed

#Breckenridge analysis
fit.coxB2a <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex, model=TRUE, data=KYBreckenridge) 
summary(fit.coxB2a)
cox.zph(fit.coxB2a)  #verify proportial hazards met

#Breckenridge analysis
fit.coxB5 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + WingScore_start + Mass_start, model=TRUE, data=KYBreckenridge) 
summary(fit.coxB5)
cox.zph(fit.coxB5)  #verify proportial hazards met

fit.coxB6  <- coxph(Surv(Time1, Time2, Event) ~ TxControl + WingScore_fluorescence + Mass_start, model=TRUE, data=KYBreckenridge) 
summary(fit.coxB6)
cox.zph(fit.coxB6)

#Rockdale analysis
fit.coxR1 <- coxph(Surv(Time1, Time2, Event) ~ TxControl, model=TRUE, data=KYRockcastle) 
summary(fit.coxR1)
cox.zph(fit.coxR1)  #verify proportial hazards met

#Rockdale analysis
fit.coxR2 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex + Sex*TxControl, model=TRUE, data=KYRockcastle) 
summary(fit.coxR2)
cox.zph(fit.coxR2)  #verify proportial hazards met, eliminate interaction as doesn't contribute

#Rockdale analysis
fit.coxR3 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex, model=TRUE, data=KYRockcastle) 
summary(fit.coxR3)
cox.zph(fit.coxR3)  #verify proportial hazards met
ggforest(fit.coxR3) #Tx causes increased risk of mortality

#Rockcastle analysis
fit.coxR4 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + Sex + WingScore_start, model=TRUE, data=KYRockcastle) 
summary(fit.coxR4)
cox.zph(fit.coxR4)  #verify proportial hazards met

#Rockcastle analysis
fit.coxR5 <- coxph(Surv(Time1, Time2, Event) ~ TxControl + WingScore_start + Mass_start, model=TRUE, data=KYRockcastle) 
summary(fit.coxR5)
cox.zph(fit.coxR5)  #verify proportial hazards met

fit.coxR6  <- coxph(Surv(Time1, Time2, Event) ~ TxControl + WingScore_fluorescence + Mass_start, model=TRUE, data=KYRockcastle) 
summary(fit.coxR6)
cox.zph(fit.coxR6)

##To plot survival curves
ggsurvplot(survfit(Surv(Time1, Time2, Event) ~ TxControl, data=KY), conf.int=TRUE, xlim=c(0,122), type="kaplan-meyer", title="Overall Survival of all bats")
ggsurvplot(survfit(Surv(Time1, Time2, Event) ~ TxControl + Sex, data=KY), conf.int=FALSE, xlim=c(0,122), type="kaplan-meyer", title="Overall Survival of all bats")

ggsurvplot(survfit(Surv(Time1, Time2, Event) ~ TxControl, data=KYBreckenridge), conf.int=TRUE, xlim=c(0,120), type="kaplan-meyer") #Control hidden as same mortality in each
ggsurvplot(survfit(Surv(Time1, Time2, Event) ~ TxControl, data=KYRockcastle), conf.int=TRUE, xlim=c(0,122), type="kaplan-meyer")

###
#Logistic regression analysis as requested by a reviewer:
library(stats)
#install.packages("AICcmodavg")
library(AICcmodavg)
#Check for normality of additional variables:
shapiro.test(logdata$Mass_start)  #passes with transformation
shapiro.test(log10(logdata$WingScore)) #passes with transformation

#Seperate data by location
KYB <- subset(logdata, Location == "Breckenridge")
head(KYB)
KYRo <-subset(logdata, Location == "Saltpeter")
head(KYRo)

#Breckenridge logistic regression models:
log.model.null <- glm(Status ~ 1, data=KYB, family='binomial')
log.model <- glm(Status ~ TxControl, data = KYB, family = 'binomial')
log.model2 <- glm(Status ~ TxControl + Mass_start, data=KYB, family='binomial')  #
log.model3 <- glm(Status ~ TxControl + Mass_start + WingScore, data = KYB, family = 'binomial')
log.model4 <- glm(Status ~ TxControl + Mass_start + WingScore_fluorescence + Time, data = KYB, family = 'binomial')

#compare models
models = list(log.model.null, log.model, log.model2, log.model3, log.model4)
ModelNames = c("Null Model", "TxStatus", "TxStatus+Mass", "TxStatus+Mass+WingScore", "TxStatus+Mass+WingScore+Time")
aictab(cand.set = models, modnames = ModelNames)

#Rockcastle logistic regression models:
log.model.nulla <- glm(Status ~ 1, data=KYRo, family='binomial')
log.modela <- glm(Status ~ TxControl, data = KYRo, family = 'binomial')
log.model2a <- glm(Status ~ TxControl + Mass_start, data=KYRo, family='binomial')  #
log.model3a <- glm(Status ~ TxControl + Mass_start + WingScore_fluorescence, data = KYRo, family = 'binomial')
log.model4a <- glm(Status ~ TxControl + Mass_start + WingScore_fluorescence + Time, data = KYRo, family = 'binomial')
log.model5a <- glm(Status ~ TxControl + Time, data = KYRo, family = 'binomial')

#compare models
models = list(log.model.nulla, log.modela, log.model2a, log.model3a, log.model4a, log.model5a)
ModelNames = c("Null Model", "TxStatus", "TxStatus+Mass", "TxStatus+Mass+WingScore", "TxStatus+Mass+WingScore+Time", "TxStatus+Time")
aictab(cand.set = models, modnames = ModelNames)
summary(log.model4a)

exp(cbind(Odds_Ratio = coef(model), confint(model)))
